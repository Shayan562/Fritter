CREATE TABLE `users` (
  `user_id` VARCHAR(100) NOT NULL PRIMARY KEY,
  `username` VARCHAR(100) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `joined_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `disp_img_link` VARCHAR(500) DEFAULT NULL
);
CREATE TABLE `posts` (
  `creator_id` VARCHAR(100) NOT NULL,
  `post_id` VARCHAR(100) NOT NULL PRIMARY KEY,
  `content` VARCHAR(1000) NOT NULL COMMENT 'Content of the post',
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT `fk_posts_creator` FOREIGN KEY (`creator_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `comments` (
  `creator_id` VARCHAR(100) NOT NULL,
  `post_id` VARCHAR(100) NOT NULL,
  `comment_id` VARCHAR(100) NOT NULL PRIMARY KEY,
  `body` VARCHAR(500) NOT NULL COMMENT 'Content of the post',
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT `fk_comments_creator` FOREIGN KEY (`creator_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_comments_post` FOREIGN KEY (`post_id`) REFERENCES `posts` (`post_id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `pages` (
  `creator_id` VARCHAR(100) NOT NULL,
  `page_id` VARCHAR(100) NOT NULL PRIMARY KEY,
  `title` VARCHAR(50) NOT NULL,
  CONSTRAINT `fk_pages_creator` FOREIGN KEY (`creator_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `page_posts` (
  `page_id` VARCHAR(100) NOT NULL,
  `post_id` VARCHAR(100) NOT NULL,
  CONSTRAINT `fk_page_posts_page` FOREIGN KEY (`page_id`) REFERENCES `pages` (`page_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_page_posts_post` FOREIGN KEY (`post_id`) REFERENCES `posts` (`post_id`) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE `members` (
  `user_id` VARCHAR(100) NOT NULL,
  `page_id` VARCHAR(100) NOT NULL,
  `role` VARCHAR(10) NOT NULL DEFAULT 'member',
  CONSTRAINT `fk_members_user` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_members_page` FOREIGN KEY (`page_id`) REFERENCES `pages` (`page_id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `friends` (
  `user_id` VARCHAR(100) NOT NULL,
  `friend_id` VARCHAR(100) NOT NULL,
  `friendship_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT `fk_friends_user` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_friends_friend` FOREIGN KEY (`friend_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `messages` (
  `sender_id` VARCHAR(100) NOT NULL,
  `receiver_id` VARCHAR(100) NOT NULL,
  `content` VARCHAR(200) NOT NULL,
  `sent_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT `fk_messages_sender` FOREIGN KEY (`sender_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_messages_receiver` FOREIGN KEY (`receiver_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `images` (
  `user_id` VARCHAR(100) NOT NULL COMMENT 'One img/vid per post',
  `post_id` VARCHAR(100) NOT NULL,
  `link` VARCHAR(500) DEFAULT NULL,
  CONSTRAINT `fk_images_user` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_images_post` FOREIGN KEY (`post_id`) REFERENCES `posts` (`post_id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `likes` (
  `user_id` VARCHAR(100) NOT NULL,
  `post_id` VARCHAR(100) NOT NULL,
  CONSTRAINT `fk_likes_user` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_likes_post` FOREIGN KEY (`post_id`) REFERENCES `posts` (`post_id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE UNIQUE INDEX `page_posts_index_0` ON `page_posts` (`post_id`);
CREATE UNIQUE INDEX `friends_index_1` ON `friends` (`user_id`, `friend_id`);
CREATE UNIQUE INDEX `images_index_2` ON `images` (`user_id`, `post_id`);
CREATE UNIQUE INDEX `likes_index_3` ON `likes` (`user_id`, `post_id`);

ALTER TABLE `friends` COMMENT 'composite key';
ALTER TABLE `images` COMMENT 'composite key';
ALTER TABLE `likes` COMMENT 'composite key';

------------------------------------------------------------------------------------------

INSERT INTO `users` (`user_id`, `username`, `password`, `disp_img_link`) VALUES
('user1', 'JohnDoe', 'password123', 'img1.jpg'),
('user2', 'AliceSmith', 'pass456', 'img2.jpg'),
('user3', 'BobJohnson', 'secret321', NULL),
('user4', 'EvaWilliams', 'userpass', 'img3.jpg'),
('user5', 'CharlieBrown', 'charliepass', 'img4.jpg');

INSERT INTO `posts` (`creator_id`, `post_id`, `content`) VALUES
('user1', 'post1', 'This is a sample post.'),
('user2', 'post2', 'Exploring new ideas.'),
('user3', 'post3', 'Sharing my experiences.'),
('user4', 'post4', 'Check out this amazing thing.'),
('user5', 'post5', 'Just a quick update.');
INSERT INTO `pages` (`creator_id`, `page_id`, `title`) VALUES
('user1', 'page1', 'Tech Enthusiasts'),
('user2', 'page2', 'Book Lovers'),
('user3', 'page3', 'Fitness Fanatics'),
('user4', 'page4', 'Foodies'),
('user5', 'page5', 'Travel Bugs');

INSERT INTO `members` (`user_id`, `page_id`, `role`) VALUES
('user1', 'page1', 'admin'),
('user2', 'page1', 'member'),
('user3', 'page2', 'admin'),
('user4', 'page2', 'member'),
('user5', 'page3', 'member');
INSERT INTO `friends` (`user_id`, `friend_id`) VALUES
('user1', 'user2'),
('user1', 'user3'),
('user2', 'user4'),
('user3', 'user4'),
('user4', 'user5');

INSERT INTO `users` (`user_id`, `username`, `password`, `disp_img_link`) VALUES
('user1', 'JohnDoe', 'password123', 'img1.jpg'),
('user2', 'AliceSmith', 'pass456', 'img2.jpg'),
('user3', 'BobJohnson', 'secret321', NULL),
('user4', 'EvaWilliams', 'userpass', 'img3.jpg'),
('user5', 'CharlieBrown', 'charliepass', 'img4.jpg');

INSERT INTO `posts` (`creator_id`, `post_id`, `content`) VALUES
('user1', 'post1', 'This is a sample post.'),
('user2', 'post2', 'Exploring new ideas.'),
('user3', 'post3', 'Sharing my experiences.'),
('user4', 'post4', 'Check out this amazing thing.'),
('user5', 'post5', 'Just a quick update.');
INSERT INTO `pages` (`creator_id`, `page_id`, `title`) VALUES
('user1', 'page1', 'Tech Enthusiasts'),
('user2', 'page2', 'Book Lovers'),
('user3', 'page3', 'Fitness Fanatics'),
('user4', 'page4', 'Foodies'),
('user5', 'page5', 'Travel Bugs');

INSERT INTO `members` (`user_id`, `page_id`, `role`) VALUES
('user1', 'page1', 'admin'),
('user2', 'page1', 'member'),
('user3', 'page2', 'admin'),
('user4', 'page2', 'member'),
('user5', 'page3', 'member');
INSERT INTO `friends` (`user_id`, `friend_id`) VALUES
('user1', 'user2'),
('user1', 'user3'),
('user2', 'user4'),
('user3', 'user4'),
('user4', 'user5');

INSERT INTO `posts` (`creator_id`, `post_id`, `content`) VALUES
('user2', 'post6', 'Where was I gone?');

INSERT INTO `images` (`user_id`, `post_id`, `link`) VALUES
('user1', 'post1', 'img1.jpg'),
('user2', 'post2', 'img2.jpg'),
('user3', 'post3', NULL),
('user4', 'post4', 'img3.jpg'),
('user5', 'post5', 'img4.jpg');

INSERT INTO `page_posts` (`page_id`, `post_id`) VALUES
('page1', 'post1'),
('page1', 'post2'),
('page2', 'post3'),
('page2', 'post4'),
('page3', 'post5');

INSERT INTO `likes` (`user_id`, `post_id`) VALUES
('user1', 'post1'),
('user2', 'post1'),
('user3', 'post2'),
('user4', 'post2'),
('user5', 'post3');

drop table comments;

CREATE TABLE `comments` (
  `creator_id` varchar(100) NOT NULL,
  `post_id` varchar(100) NOT NULL,
  `comment_id` INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
  `body` varchar(500) NOT NULL COMMENT 'Content of the post',
  `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  KEY `fk_comments_creator` (`creator_id`),
  KEY `fk_comments_post` (`post_id`),
  CONSTRAINT `fk_comments_creator` FOREIGN KEY (`creator_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_comments_post` FOREIGN KEY (`post_id`) REFERENCES `posts` (`post_id`) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO `comments` (`creator_id`, `post_id`, `body`) VALUES
('user1', 'post1', 'Great post!'),
('user2', 'post1',  'Interesting content.'),
('user3', 'post2',  'Nice thoughts.'),
('user4', 'post3',  'Looking forward to more.'),
('user5', 'post3', 'Well done!');